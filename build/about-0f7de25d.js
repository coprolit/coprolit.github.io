import{S as e,i as o,s as i,e as s,a as n,b as a,c as t,n as r,f as l}from"./main.js";function c(e){let o,i,c,d,m,h,g;return{c(){o=s("p"),o.innerHTML="The Command Post is an collection of <i>unofficial</i> missions offering an extra tactical layer to your game of Bolt Action.",i=n(),c=s("p"),c.innerHTML="Missions are intended as a supplement to the main objective of the scenario played. Using missions, each player gets assigned a <strong>secondary objective</strong>. Succeeding or failing this objective can influence the outcome of game.",d=n(),m=s("p"),m.textContent="As a bonus, The Command Post helps you automate the process of deciding on a scenario to play, and assigning a secret mission to each player.",h=n(),g=s("div"),g.innerHTML='<h3>Have feedback? Have an idea for a new mission?</h3> \n  <p>We welcome your suggestions! First, consider the following:</p> \n  <ul><li>Missions are intended to add extra tactical depth and decision making to a game of Bolt Action.</li> \n    <li>A mission takes the form of a <strong>secondary</strong> objective that is achievable by <strong>any</strong> force selection.</li> \n    <li>Missions affect the outcome of, but are subordinate to, the main scenario.</li> \n    <li>The player should have to dedicate a limited part of his/her force during a game to succeed in the mission - e.g. a specific unit for most of the game, several units during a single turn, or similar.</li> \n    <li>Ideally, the succes of a mission can be determined either at a turn end phase or at the end of the game, based on e.g. whether one or more units or models are destroyed or on the table in a specific area. Missions should avoid relying on players&#39; memory of how an hours long game progressed, turn by turn.</li></ul> \n  \n  <div>Submit suggestions <strong><a href="mailto:missions@philippesimpson.dk">here</a></strong>.</div>',a(g,"class","flow panel border shadow padding")},m(e,s){t(e,o,s),t(e,i,s),t(e,c,s),t(e,d,s),t(e,m,s),t(e,h,s),t(e,g,s)},p:r,i:r,o:r,d(e){e&&l(o),e&&l(i),e&&l(c),e&&l(d),e&&l(m),e&&l(h),e&&l(g)}}}export default class extends e{constructor(e){super(),o(this,e,null,c,i,{})}}
//# sourceMappingURL=about-0f7de25d.js.map
